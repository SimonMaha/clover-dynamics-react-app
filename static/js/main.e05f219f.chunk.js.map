{"version":3,"sources":["components/Dropdown.js","components/ImageItem.js","components/ImageList.js","components/Alert.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","items","title","showNext","useState","name","value","setValue","className","onSubmit","event","preventDefault","console","log","style","marginBottom","onChange","target","map","item","key","id","type","ImageItem","imgSrc","altName","src","alt","ImageList","imgList","img","img_src","Alert","text","showAlert","role","onClick","aria-label","aria-hidden","rovers","cameras","abbreviation","Home","showRover","setShowRover","showCamera","setShowCamera","showSol","setShowSol","roverValue","setRoverValue","cameraValue","setCameraValue","solValue","setSolValue","setImgList","page","setPage","noMore","setNoMore","setShowAlert","alertText","setAlertText","apiRequest","fetch","then","res","json","data","photos","length","concat","catch","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","onExited","toLowerCase","find","element","placeholder","aria-describedby","e","marginTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e05f219f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const Dropdown = ({items, title, showNext}) => {\r\n    const [value, setValue] = useState(items[0].name);\r\n  \r\n    const handleChange = event => {\r\n        setValue(event.target.value);\r\n        \r\n    }\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log('Your choice ' + value);\r\n        showNext(event ,value);\r\n    }\r\n    \r\n    return (\r\n        <form className=\"container-fluid\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <label>\r\n                        Choose {title}:\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4 col-md-2\"></div>\r\n                <div className=\"col-lg-4 col-md-8 col-sm-8 text-right\" style={{marginBottom: 20}}>\r\n                    <select value={value} onChange={handleChange} className=\"drop-list form-control\">\r\n                        {items.map(item => (\r\n                            <option className=\"form-control \" value={item.name} key={item.id}>{item.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-lg-1 col-md-2 col-sm-4 text-center\">\r\n                    <button className=\"btn btn-outline-primary\" type=\"submit\" id=\"button-addon2\">Submit</button>\r\n                </div>\r\n                <div className=\"col-lg-3\"></div>\r\n            </div>\r\n        </form>\r\n    );\r\n    \r\n  }\r\n","import React from 'react';\r\n\r\nexport const ImageItem = ({imgSrc, altName}) => {\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n            <img src={imgSrc} alt={altName} className=\"img-thumbnail img-size\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ImageItem } from './ImageItem';\r\n\r\nexport const ImageList = ({imgList}) => {\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {imgList.map(img => (\r\n                    <ImageItem imgSrc={img.img_src} altName={img.id} key={img.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Alert = ({text, showAlert}) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-md-1\"></div>\r\n                <div className=\"col-lg-6 col-md-10 col-sm-12\">\r\n                    <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                        <strong>Sorry!</strong>\r\n                        &nbsp;{text}\r\n                        <button onClick={() => showAlert(false)} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {Dropdown} from '../components/Dropdown';\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport { ImageList } from '../components/ImageList';\r\nimport { Alert } from '../components/Alert';\r\n\r\nconst rovers = [\r\n    {\r\n        id: 1,\r\n        name: 'Curiosity'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Opportunity'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Spirit'\r\n    },\r\n]\r\n  \r\nconst cameras = [\r\n    {\r\n        id: 1,\r\n        abbreviation: 'fhaz',\r\n        name: 'Front Hazard Avoidance Camera',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 2,\r\n        abbreviation: 'rhaz',\r\n        name: 'Rear Hazard Avoidance Camera\t',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 3,\r\n        abbreviation: 'mast',\r\n        name: 'Mast Camera',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 4,\r\n        abbreviation: 'chemcam',\r\n        name: 'Chemistry and Camera Complex',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 5,\r\n        abbreviation: 'mahli',\r\n        name: 'Mars Hand Lens Imager',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 6,\r\n        abbreviation: 'mardi',\r\n        name: 'Mars Descent Imager',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 7,\r\n        abbreviation: 'navcam',\r\n        name: 'Navigation Camera',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 8,\r\n        abbreviation: 'pancam',\r\n        name: 'Panoramic Camera',\r\n    },\r\n    {\r\n        id: 9,\r\n        abbreviation: 'minites',\r\n        name: 'Miniature Thermal Emission Spectrometer',\r\n    }\r\n]\r\n\r\n  \r\nexport const Home = () => {\r\n    const [showRover, setShowRover] = useState(true);\r\n    const [showCamera, setShowCamera] = useState(false);\r\n    const [showSol, setShowSol] = useState(false);\r\n    const [roverValue, setRoverValue] = useState('');\r\n    const [cameraValue, setCameraValue] = useState('');\r\n    const [solValue, setSolValue] = useState('');\r\n    const [imgList, setImgList] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [noMore, setNoMore] = useState(true);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertText, setAlertText] = useState(\"\");\r\n\r\n    const submitRoverHandler = (event, name) => {\r\n        event.preventDefault();\r\n        setImgList([]);\r\n        setPage(1);\r\n        setSolValue('');\r\n        setShowAlert(false);\r\n        setShowRover(false);\r\n        setRoverValue(name.toLowerCase());\r\n        console.log(roverValue);\r\n    }\r\n\r\n    const submitCameraHandler = (event, name) => {\r\n        event.preventDefault();\r\n        setShowAlert(false);\r\n        setShowCamera(false);\r\n        setCameraValue(cameras.find(element => element.name === name).abbreviation);\r\n        console.log(cameraValue);\r\n    }\r\n\r\n    const apiRequest = event => {\r\n        event.preventDefault();\r\n        fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${roverValue}/photos?sol=${solValue}&camera=${cameraValue}&page=${page}&api_key=xrmjhy2apNicfrbzdQpIEG8U4QpM4cR7xtPc1Jw4`)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            if (data.photos.length === 0) {\r\n                setNoMore(true);\r\n                setShowAlert(true);\r\n                setAlertText(\"Nothing to show. Try to choose another camera or sol.\");\r\n            }else {\r\n                setImgList(data.photos);\r\n                if (data.photos.length > 0) {\r\n                    setImgList(imgList.concat(data.photos))\r\n                }\r\n                if (data.photos.length < 25){\r\n                    setNoMore(true);\r\n                }\r\n                setPage(page + 1);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            setNoMore(true);\r\n            setShowAlert(true);\r\n            setAlertText(\"Trouble with server!\");\r\n        })\r\n    }\r\n\r\n    const submitSolHandler = event => {\r\n        event.preventDefault();\r\n        setShowSol(false);\r\n        setNoMore(false);\r\n        apiRequest(event);\r\n        console.log(\"Sol:\", solValue);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1>\r\n                        Images from Mars\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <CSSTransition\r\n                    in={showRover}\r\n                    timeout={300}\r\n                    classNames=\"node\"\r\n                    unmountOnExit\r\n                    onEnter={() => setShowCamera(false)}\r\n                    onExited={() => setShowCamera(true)}\r\n                    >\r\n                        <Dropdown items={rovers} title={\"rover\"} showNext={submitRoverHandler}/>\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={showCamera}\r\n                        timeout={300}\r\n                        classNames=\"node\"\r\n                        unmountOnExit\r\n                        onEnter={() => setShowSol(false)}\r\n                        onExited={() => setShowSol(true)}\r\n                    >\r\n                        <Dropdown items={cameras} title={\"camera\"} showNext={submitCameraHandler}/>\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={showSol}\r\n                        timeout={300}\r\n                        classNames=\"node\"\r\n                        unmountOnExit\r\n                        onEnter={() => setShowRover(false)}\r\n                        onExited={() => setShowRover(true)}\r\n                    >\r\n                        <form className=\"container-fluid\" onSubmit={submitSolHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <label>\r\n                                        Choose sol:\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-3 col-md-1\"></div>\r\n                                <div className=\"col-lg-6 col-md-10 col-sm-12 text-center input-group mb-3\">\r\n                                    <input type=\"number\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"Enter sol...\" \r\n                                        aria-label=\"Recipient's username\" \r\n                                        aria-describedby=\"button-addon2\"\r\n                                        value={solValue}\r\n                                        onChange={e => setSolValue(e.target.value)} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-outline-primary\" type=\"submit\" id=\"button-addon2\">Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-3 col-md-1\"></div>\r\n                            </div>\r\n                        </form>\r\n                    </CSSTransition>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{marginTop: 20}}>\r\n                <ImageList imgList={imgList} />\r\n            </div>\r\n            {showAlert && <Alert text={alertText} showAlert={setShowAlert}/>}\r\n            <div className=\"row\" style={{marginBottom: 20, marginTop: 10}}>\r\n                <div className=\"col text-center\">\r\n                    {!noMore && <button className=\"btn btn-outline-primary load_btn\" type=\"button\" onClick={e => apiRequest(e)}>Load more</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-primary\">\n        <div className=\"col\"></div>\n        <div className=\"col-6 col-sm-12\">\n          <h1 className=\"text-center text-white\">NASA Apo</h1>\n       </div>\n       <div className=\"col\"></div>\n      </div>\n      <div className=\"row\" style={{marginTop: 20}}>\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}