{"version":3,"sources":["components/Dropdown.js","components/ImageItem.js","components/ImageList.js","components/Alert.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","items","title","showNext","className","FormControl","InputLabel","htmlFor","Select","native","onChange","event","preventDefault","target","value","inputProps","name","id","aria-label","map","item","key","ImageItem","imgSrc","altName","src","alt","ImageList","imgList","img","img_src","Alert","text","showAlert","role","onClick","type","aria-hidden","rovers","cameras","abbreviation","Home","useState","showRover","setShowRover","showCamera","setShowCamera","showSol","setShowSol","roverValue","setRoverValue","cameraValue","setCameraValue","solValue","setSolValue","setImgList","page","setPage","noMore","setNoMore","setShowAlert","alertText","setAlertText","apiRequest","fetch","then","res","json","data","photos","length","concat","prev","catch","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","onExited","toLowerCase","console","log","find","element","onSubmit","TextField","label","e","style","marginTop","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3620bd82.chunk.js","sourcesContent":["import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport const Dropdown = ({items, title, showNext}) => {\r\n  \r\n    const handleChange = event => {\r\n        event.preventDefault();\r\n        showNext(event ,event.target.value);\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <FormControl className=\"drop-list\">\r\n                        <InputLabel htmlFor=\"age-native-simple\">{`Choose ${title}`}</InputLabel>\r\n                        <Select\r\n                            className=\"drop-list\"\r\n                            native\r\n                            onChange={handleChange}\r\n                            inputProps={{\r\n                                name: 'age',\r\n                                id: 'age-native-simple',\r\n                            }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" />\r\n                            {items.map(item => (\r\n                                <option className=\"form-control\" value={item.name} key={item.id}>{item.name}</option>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <form className=\"container-fluid\" onSubmit={handleSubmit}>\r\n        //     <div className=\"row\">\r\n        //         <div className=\"col text-center\">\r\n        //             <label>\r\n        //                 Choose {title}:\r\n        //             </label>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className=\"row\">\r\n        //         <div className=\"col-lg-4 col-md-2\"></div>\r\n        //         <div className=\"col-lg-4 col-md-8 col-sm-8 text-right\" style={{marginBottom: 20}}>\r\n        //             <select value={value} onChange={handleChange} className=\"drop-list form-control\">\r\n        //                 {items.map(item => (\r\n        //                     <option className=\"form-control \" value={item.name} key={item.id}>{item.name}</option>\r\n        //                 ))}\r\n        //             </select>\r\n        //         </div>\r\n        //         <div className=\"col-lg-1 col-md-2 col-sm-4 text-center\">\r\n        //             <button className=\"btn btn-outline-primary\" type=\"submit\" id=\"button-addon2\">Submit</button>\r\n        //         </div>\r\n        //         <div className=\"col-lg-3\"></div>\r\n        //     </div>\r\n        // </form>\r\n    );\r\n    \r\n  }\r\n","import React from 'react';\r\n\r\nexport const ImageItem = ({imgSrc, altName}) => {\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n            <img src={imgSrc} alt={altName} className=\"img-thumbnail img-size\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { ImageItem } from './ImageItem';\r\n\r\nexport const ImageList = ({imgList}) => {\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {imgList.map(img => (\r\n                    <ImageItem imgSrc={img.img_src} altName={img.id} key={img.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Alert = ({text, showAlert}) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-md-1\"></div>\r\n                <div className=\"col-lg-6 col-md-10 col-sm-12\">\r\n                    <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\r\n                        <strong>Sorry!</strong>\r\n                        &nbsp;{text}\r\n                        <button onClick={() => showAlert(false)} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {Dropdown} from '../components/Dropdown';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { ImageList } from '../components/ImageList';\r\nimport { Alert } from '../components/Alert';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst rovers = [\r\n    {\r\n        id: 1,\r\n        name: 'Curiosity'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Opportunity'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Spirit'\r\n    },\r\n]\r\n  \r\nconst cameras = [\r\n    {\r\n        id: 1,\r\n        abbreviation: 'fhaz',\r\n        name: 'Front Hazard Avoidance Camera',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 2,\r\n        abbreviation: 'rhaz',\r\n        name: 'Rear Hazard Avoidance Camera\t',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 3,\r\n        abbreviation: 'mast',\r\n        name: 'Mast Camera',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 4,\r\n        abbreviation: 'chemcam',\r\n        name: 'Chemistry and Camera Complex',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 5,\r\n        abbreviation: 'mahli',\r\n        name: 'Mars Hand Lens Imager',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 6,\r\n        abbreviation: 'mardi',\r\n        name: 'Mars Descent Imager',\r\n        rovers: ['Curiosity']\r\n    },\r\n    {\r\n        id: 7,\r\n        abbreviation: 'navcam',\r\n        name: 'Navigation Camera',\r\n        rovers: ['Curiosity', 'Opportunity', 'Spirit']\r\n    },\r\n    {\r\n        id: 8,\r\n        abbreviation: 'pancam',\r\n        name: 'Panoramic Camera',\r\n    },\r\n    {\r\n        id: 9,\r\n        abbreviation: 'minites',\r\n        name: 'Miniature Thermal Emission Spectrometer',\r\n    }\r\n]\r\n\r\n  \r\nexport const Home = () => {\r\n    const [showRover, setShowRover] = useState(true);\r\n    const [showCamera, setShowCamera] = useState(false);\r\n    const [showSol, setShowSol] = useState(false);\r\n    const [roverValue, setRoverValue] = useState('');\r\n    const [cameraValue, setCameraValue] = useState('');\r\n    const [solValue, setSolValue] = useState('');\r\n    const [imgList, setImgList] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [noMore, setNoMore] = useState(true);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertText, setAlertText] = useState(\"\");\r\n\r\n    const submitRoverHandler = (event, name) => {\r\n        event.preventDefault();\r\n        setImgList([]);\r\n        setPage(1);\r\n        setSolValue('');\r\n        setShowAlert(false);\r\n        setShowRover(false);\r\n        setRoverValue(name.toLowerCase());\r\n    }\r\n\r\n    const submitCameraHandler = (event, name) => {\r\n        event.preventDefault();\r\n        setShowAlert(false);\r\n        setShowCamera(false);\r\n        console.log(\"Camera\",name);\r\n        setCameraValue(cameras.find(element => element.name === name).abbreviation);\r\n    }\r\n\r\n    const apiRequest = event => {\r\n        event.preventDefault();\r\n        fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${roverValue}/photos?sol=${solValue}&camera=${cameraValue}&page=${page}&api_key=xrmjhy2apNicfrbzdQpIEG8U4QpM4cR7xtPc1Jw4`)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            if (data.photos.length === 0) {\r\n                setShowAlert(true);\r\n                setAlertText(\"Nothing to show. Try to choose another camera or sol.\");\r\n            }else {\r\n                setImgList(data.photos);\r\n                if (data.photos.length > 0) {\r\n                    setImgList(imgList.concat(data.photos));\r\n                    setNoMore(false);\r\n                }\r\n                if (data.photos.length < 25){\r\n                    setNoMore(true);\r\n                }\r\n                setPage(prev => prev + 1);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            setNoMore(true);\r\n            setShowAlert(true);\r\n            setAlertText(\"Trouble with server!\");\r\n        })\r\n    }\r\n\r\n    const submitSolHandler = event => {\r\n        event.preventDefault();\r\n        setShowSol(false);\r\n        apiRequest(event);\r\n        console.log(\"Sol:\", solValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1>\r\n                        Images from Mars\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <CSSTransition\r\n                        in={showRover}\r\n                        timeout={300}\r\n                        classNames=\"node\"\r\n                        unmountOnExit\r\n                        onEnter={() => setShowCamera(false)}\r\n                        onExited={() => setShowCamera(true)}\r\n                    >\r\n                        <Dropdown items={rovers} title={\"rover\"} showNext={submitRoverHandler}/>\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={showCamera}\r\n                        timeout={300}\r\n                        classNames=\"node\"\r\n                        unmountOnExit\r\n                        onEnter={() => setShowSol(false)}\r\n                        onExited={() => setShowSol(true)}\r\n                    >\r\n                        <Dropdown items={cameras} title={\"camera\"} showNext={submitCameraHandler}/>\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={showSol}\r\n                        timeout={300}\r\n                        classNames=\"node\"\r\n                        unmountOnExit\r\n                        onEnter={() => setShowRover(false)}\r\n                        onExited={() => setShowRover(true)}\r\n                    >\r\n                        <form className=\"container-fluid\" onSubmit={submitSolHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-3 col-md-1\"></div>\r\n                                <div className=\"col-lg-6 col-md-10 col-sm-12 text-center\">\r\n                                    <TextField\r\n                                        className=\"drop-list\"\r\n                                        id=\"standard-textarea\"\r\n                                        label=\"Choose sol\"\r\n                                        value={solValue}\r\n                                        onChange={e => setSolValue(e.target.value)}\r\n                                        inputProps={{ type: 'number'}}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-lg-3 col-md-1\"></div>\r\n                            </div>\r\n                        </form>\r\n                    </CSSTransition>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{marginTop: 20}}>\r\n                <ImageList imgList={imgList} />\r\n            </div>\r\n            {showAlert && <Alert text={alertText} showAlert={setShowAlert}/>}\r\n            <div className=\"row\" style={{marginBottom: 20, marginTop: 10}}>\r\n                <div className=\"col text-center\">\r\n                    {!noMore && <button className=\"btn btn-outline-primary load_btn\" type=\"button\" onClick={e => apiRequest(e)}>Load more</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-primary\">\n        <div className=\"col-sm-12\">\n          <h1 className=\"text-center text-white\">NASA App</h1>\n       </div>\n      </div>\n      <div className=\"row\" style={{marginTop: 20}}>\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}